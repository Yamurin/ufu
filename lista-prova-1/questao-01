#include <stdio.h>
#include <stdlib.h>
#include <string.h>

int main()
{
    typedef struct {
        int codigoId;
        char nome[50];
        int quantEstoque;
        double valor;
    } produto_t;
    
    int quantProdutos;
    
    printf("Numero de produtos: ");
    scanf("%d", &quantProdutos);
    
    produto_t *produtos;
    produtos = (produto_t *) malloc (quantProdutos * sizeof(produto_t));
    
    produto_t *maiorValor = produtos;
    produto_t *maiorQuant = produtos;
    
    if (produtos == NULL)
    {
        printf("ERRO: Nao foi possivel alocar memoria. \n");
        exit (1);
    }
    
    for (int i = 0; i < quantProdutos; i++)
    {
        printf("\n** Cadastrando Produto #%d... **\n", i + 1);
        
        printf("Codigo: ");
        scanf("%d", &(produtos[i].codigoId));
        
        setbuf(stdin, NULL);
        
        printf("Nome: ");
        fgets(produtos[i].nome, 50, stdin);
        
        // Remove o caracter '\n' do input
        produtos[i].nome [strcspn(produtos[i].nome, "\n")] = 0;
        
        printf("Quantidade em estoque: ");
        scanf("%d", &(produtos[i].quantEstoque));
        
        printf("Valor: ");
        scanf("%lf", &(produtos[i].valor));
        
        setbuf(stdin, NULL);
        
        if (produtos[i].valor > maiorValor->valor)
            maiorValor = &produtos[i];
            
        if (produtos[i].quantEstoque > maiorValor->quantEstoque)
            maiorQuant = &produtos[i];
    }
    
    printf("\nO produto '%s' possui maior preÃ§o de venda (R$%0.2lf).\n", maiorValor->nome, maiorValor->valor);
    printf("O produto '%s' possui maior quantidade disponivel em estoque (%d un).\n", maiorQuant->nome, maiorQuant->quantEstoque);
    
    free(produtos);
    return 0;
}
